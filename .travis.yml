---
sudo: required
  # We need sudo for some of the Docker commands.

env:
  # Provide a list of OSes we want to use for testing.
  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ""

services:
  # Tell Travis to start Docker when it brings up an environment.
  - docker

before_install:
  # Pull container from Docker Hub.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/install-picocms:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Install required Galaxy roles.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy install geerlingguy.apache-php-fpm geerlingguy.php'

  # Basic role syntax check
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/install-picocms/tests/test.yml
    --syntax-check

  # Run the playbook and hope for no errors
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/install-picocms/tests/test.yml

  # Run the playbook one more time and hope for no changes to make sure its idempotent
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/install-picocms/tests/test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
